[{"path":[]},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement ando@maslab.aitech.ac.jp. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://nononoexe.github.io/rrstools/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://nononoexe.github.io/rrstools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rrstools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nononoexe.github.io/rrstools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keisuke ANDO. Author, maintainer.","code":""},{"path":"https://nononoexe.github.io/rrstools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"ANDO K (2025). rrstools: Tools Analyzing RoboCupRescue Simulation Data. R package version 0.3.0, https://nononoexe.github.io/rrstools/.","code":"@Manual{,   title = {rrstools: Tools for Analyzing RoboCupRescue Simulation Data},   author = {Keisuke ANDO},   year = {2025},   note = {R package version 0.3.0},   url = {https://nononoexe.github.io/rrstools/}, }"},{"path":[]},{"path":"https://nononoexe.github.io/rrstools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Analyzing RoboCupRescue Simulation Data","text":"can install development version rrstools using following methods:","code":""},{"path":"https://nononoexe.github.io/rrstools/index.html","id":"using-installpackages-r-universe","dir":"","previous_headings":"Installation","what":"Using install.packages() (R-universe)","title":"Tools for Analyzing RoboCupRescue Simulation Data","text":"","code":"# Enable the R-universe options(repos = c(   nononoexe = \"https://nononoexe.r-universe.dev\",   cran = \"https://cloud.r-project.org\" ))  # Install the package install.packages(\"rrstools\")"},{"path":"https://nononoexe.github.io/rrstools/index.html","id":"using-pak","dir":"","previous_headings":"Installation","what":"Using pak","title":"Tools for Analyzing RoboCupRescue Simulation Data","text":"","code":"# install.packages(\"pak\") pak::pak(\"nononoexe/rrstools\")"},{"path":"https://nononoexe.github.io/rrstools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tools for Analyzing RoboCupRescue Simulation Data","text":"package provides functions read plot RRS map data.  possible overlay scenario data map.","code":"library(rrstools)  # Sample GML file gml <- system.file(\"extdata\", \"map-test.gml\", package = \"rrstools\")  # Read the map data from the GML file map <- read_rrs_map(gml)  # Print the map data map #> RoboCupRescue Simulation map object #> Number of elements: nodes: 315 edges: 413 faces: 95 #> Bounding box: xmin: -30.000000 ymin: -20.000000 xmax: 135.000000 ymax: 121.000000  # Plot the map data plot(map) # Sample scenario file xml <- system.file(\"extdata\", \"scenario-test.xml\", package = \"rrstools\")  # Read the scenario data from the XML file scenario <- read_rrs_scenario(xml)  # Print the scenario data scenario #> RoboCupRescue Simulation scenario object #> Number of entities: 35 #> Entities by type: #>             Type Count #>  ambulancecentre     1 #>    ambulanceteam     4 #>         civilian    20 #>      firebrigade     6 #>      firestation     1 #>      policeforce     1 #>           refuge     2  # Plot the map with the scenario data plot(map, scenario)"},{"path":"https://nononoexe.github.io/rrstools/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Tools for Analyzing RoboCupRescue Simulation Data","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/competition_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"RoboCupRescue Simulation competition maps — competition_maps","title":"RoboCupRescue Simulation competition maps — competition_maps","text":"dataset containing information maps used past RoboCupRescue Simulation competitions. includes competitions year, name map, official URL download map data.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/competition_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RoboCupRescue Simulation competition maps — competition_maps","text":"","code":"competition_maps"},{"path":"https://nononoexe.github.io/rrstools/reference/competition_maps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RoboCupRescue Simulation competition maps — competition_maps","text":"data.frame 15 rows 3 columns: year integer representing year competition. map character string indicating name map data. url character string containing official download URL map data.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/competition_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RoboCupRescue Simulation competition maps — competition_maps","text":"","code":"# Show the dataset competition_maps #>    year        map #> 1  2024 eindhoven1 #> 2  2024      kobe1 #> 3  2024        vc1 #> 4  2024        ny1 #> 5  2024      joao1 #> 6  2024    sydney1 #> 7  2024 eindhoven2 #> 8  2024  montreal1 #> 9  2024  istanbul1 #> 10 2024     paris1 #> 11 2024        sf1 #> 12 2024      kobe2 #> 13 2024 eindhoven3 #> 14 2024        vc2 #> 15 2024  bordeaux1 #>                                                                                                      url #> 1  https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/eindhoven1/eindhoven1.7z #> 2            https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/kobe1/kobe1.7z #> 3                https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/vc1/vc1.7z #> 4                https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/ny1/ny1.7z #> 5            https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/joao1/joao1.7z #> 6        https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/sydney1/sydney1.7z #> 7  https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/eindhoven2/eindhoven2.7z #> 8    https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/montreal1/montreal1.7z #> 9    https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/istanbul1/istanbul1.7z #> 10         https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/paris1/paris1.7z #> 11               https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/sf1/sf1.7z #> 12           https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/kobe2/kobe2.7z #> 13 https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/eindhoven3/eindhoven3.7z #> 14               https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/vc2/vc2.7z #> 15   https://cdn.robocup.org/rsim/public/competitions/2024-RSL/info/agent/results/bordeaux1/bordeaux1.7z"},{"path":"https://nononoexe.github.io/rrstools/reference/download_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Download RoboCupRescue Simulation maps — download_maps","title":"Download RoboCupRescue Simulation maps — download_maps","text":"download_maps downloads map data archives RoboCupRescue Simulation official website. allows filtering year map name.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/download_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download RoboCupRescue Simulation maps — download_maps","text":"","code":"download_maps(   years = 2024,   maps = character(),   download_dir = getwd(),   extract = FALSE )"},{"path":"https://nononoexe.github.io/rrstools/reference/download_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download RoboCupRescue Simulation maps — download_maps","text":"years numeric vector competition years download. empty, maps available years considered. Defaults 2024. maps character vector map names download (e.g., \"kobe\"). empty, maps selected years downloaded. Defaults empty character vector. download_dir string specifying directory files downloaded. directory exist, created. Defaults current working directory (getwd()). extract logical value. TRUE, downloaded .7z archives extracted download_dir, original archive file removed upon successful extraction. Note: feature requires 7-Zip command-line tool (7z) installed available system's PATH. Defaults FALSE.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/download_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download RoboCupRescue Simulation maps — download_maps","text":"Invisibly returns character vector local paths successfully downloaded files. Returns empty character vector files downloaded.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/download_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download RoboCupRescue Simulation maps — download_maps","text":"","code":"if (FALSE) { # \\dontrun{ # Download the 2024 maps and extract them download_maps(years = 2024, download_dir = \"maps\", extract = TRUE) } # }"},{"path":"https://nononoexe.github.io/rrstools/reference/get_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get elements from a RoboCupRescue Simulation map — get_elements","title":"Get elements from a RoboCupRescue Simulation map — get_elements","text":"functions provide methods extract specific geographical elements rrs_map object. can retrieve elements certain type filter IDs.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/get_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get elements from a RoboCupRescue Simulation map — get_elements","text":"","code":"get_nodes(map, ids = character())  get_edges(map, ids = character())  get_roads(map, ids = character())  get_buildings(map, ids = character())  get_entrances(map, ids = character())  get_passage(map, ids = character())"},{"path":"https://nononoexe.github.io/rrstools/reference/get_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get elements from a RoboCupRescue Simulation map — get_elements","text":"map object class rrs_map. ids character vector element IDs filter . empty (default), elements specified type returned.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/get_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get elements from a RoboCupRescue Simulation map — get_elements","text":"sf data frame containing requested map elements.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/get_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get elements from a RoboCupRescue Simulation map — get_elements","text":"","code":"gml <- system.file(\"extdata\", \"map-test.gml\", package = \"rrstools\") map <- read_rrs_map(gml)  # Get all nodes get_nodes(map) #> Simple feature collection with 315 features and 3 fields #> Attribute-geometry relationships: constant (3) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -30 ymin: -20 xmax: 135 ymax: 121 #> CRS:           NA #> First 10 features: #>    id     x     y            geometry #> 1   0 83.16 43.16 POINT (83.16 43.16) #> 2   1 76.84 36.84 POINT (76.84 36.84) #> 3   2 76.84  3.16  POINT (76.84 3.16) #> 4   3 83.16  3.16  POINT (83.16 3.16) #> 5   4  3.16  3.16   POINT (3.16 3.16) #> 6   5 -3.16 -3.16 POINT (-3.16 -3.16) #> 7   6 80.00 -3.16    POINT (80 -3.16) #> 8   7 67.00 43.00       POINT (67 43) #> 9   8 73.16 36.84 POINT (73.16 36.84) #> 10  9 40.00 -3.16    POINT (40 -3.16)  # Get a specific node by ID get_nodes(map, c(\"0\", \"2\")) #> Simple feature collection with 2 features and 3 fields #> Attribute-geometry relationships: constant (3) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 76.84 ymin: 3.16 xmax: 83.16 ymax: 43.16 #> CRS:           NA #>   id     x     y            geometry #> 1  0 83.16 43.16 POINT (83.16 43.16) #> 3  2 76.84  3.16  POINT (76.84 3.16)"},{"path":"https://nononoexe.github.io/rrstools/reference/morph_road_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Morph raw map data into a road network — morph_road_network","title":"Morph raw map data into a road network — morph_road_network","text":"morph_road_network() converts map data RoboCup Rescue Simulation road network.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/morph_road_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Morph raw map data into a road network — morph_road_network","text":"","code":"morph_road_network(map, mode = c(\"all\", \"roads_only\", \"roads_no_entrances\"))"},{"path":"https://nononoexe.github.io/rrstools/reference/morph_road_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Morph raw map data into a road network — morph_road_network","text":"map rrs_map data, GML map data loaded read_rrs_map(). mode character string specifiying mode road network: \"\": areas included network (default). \"roads_only\": road areas included. \"roads_no_entrances\": road areas included, excluding entrances. mode set \"roads_only\" \"roads_no_entrances\", passages (connections buildings) excluded network prevent formation isolated nodes.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/morph_road_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Morph raw map data into a road network — morph_road_network","text":"list containing network components: nodes: sf object nodes point geometries. edges: sf object edges linestring geometries.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/morph_road_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Morph raw map data into a road network — morph_road_network","text":"road network consists nodes edges. Nodes defined centroids areas center points boundaries areas. Edges connect nodes agent can travel.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/morph_road_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Morph raw map data into a road network — morph_road_network","text":"","code":"gml <- system.file(\"extdata\", \"map-test.gml\", package = \"rrstools\") map <- read_rrs_map(gml) net <- morph_road_network(map) net #> $nodes #> Simple feature collection with 197 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -21 ymin: -15 xmax: 120.7273 ymax: 110.9911 #> CRS:           NA #> First 10 features: #>     id origin_id     type degree                  geometry #> 1  977       956 building      1           POINT (90 19.5) #> 2  978       957 building      1           POINT (90 13.5) #> 3  979       958 building      1            POINT (90 7.5) #> 4  980       959 building      1             POINT (65 16) #> 5  981       952 building      1           POINT (90 37.5) #> 6  982       953 building      1 POINT (65.08122 46.75888) #> 7  983       954 building      1           POINT (90 31.5) #> 8  984       955 building      1           POINT (90 25.5) #> 9  985       948 building      1           POINT (90 61.5) #> 10 986       949 building      1           POINT (90 55.5) #>  #> $edges #> Simple feature collection with 204 features and 4 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -21 ymin: -15 xmax: 120.7273 ymax: 110.9911 #> CRS:           NA #> First 10 features: #>      id     type from  to                       geometry #> 1  1174 building  956 772    LINESTRING (90 19.5, 95 18) #> 2  1175 building  957 788    LINESTRING (90 13.5, 95 15) #> 3  1176 building  958 793      LINESTRING (90 7.5, 95 8) #> 4  1177 building  959 806     LINESTRING (65 16, 65.5 7) #> 5  1178 building  952 752    LINESTRING (90 37.5, 95 39) #> 6  1179 building  953 818 LINESTRING (65.08122 46.758... #> 7  1180 building  954 754    LINESTRING (90 31.5, 95 30) #> 8  1181 building  955 770    LINESTRING (90 25.5, 95 27) #> 9  1182 building  948 709    LINESTRING (90 61.5, 95 60) #> 10 1183 building  949 725    LINESTRING (90 55.5, 95 57) #>  #> attr(,\"class\") #> [1] \"rrs_road_network\" \"list\""},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a RoboCupRescue Simulation map — plot.rrs_map","title":"Plot a RoboCupRescue Simulation map — plot.rrs_map","text":"plot visualizes rrs_map object, displaying geographical features buildings roads. rrs_scenario object provided, also overlays initial locations rescue platoons, civilians, special buildings scenario. leverages sf package's plotting capabilities render map components.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a RoboCupRescue Simulation map — plot.rrs_map","text":"","code":"# S3 method for class 'rrs_map' plot(   x,   scenario = NULL,   building_colour = \"#f0e7d8\",   building_border = \"#121212\",   road_colour = \"#dbdbdb\",   road_border = \"#121212\",   background_colour = NA,   ... )"},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a RoboCupRescue Simulation map — plot.rrs_map","text":"x object class rrs_map. scenario object class rrs_scenario. provided, entities scenario plotted map. Defaults NULL. building_colour colour buildings. building_border border colour buildings. road_colour colour roads. road_border border colour roads. background_colour background colour plot. ... Additional arguments passed par().","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a RoboCupRescue Simulation map — plot.rrs_map","text":"plot first plots basic map layout, including buildings roads. , scenario given, plots following entities: Refuges: Plotted green (#00ff00), capacity displayed. Fire Stations: Plotted yellow (#ffff00). Ambulance Centres: Plotted white (#ffffff). Police Offices: Plotted blue (#0000ff). Civilians: Plotted green circles (#00ff00), number indicating count location. Fire Brigades: Plotted red circles (#ff0000), number indicating count location. Ambulance Teams: Plotted white circles (#ffffff), number indicating count location. Police Forces: Plotted blue circles (#0000ff), number indicating count location. positions human entities (agents civilians) slightly offset center location avoid overlap.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a RoboCupRescue Simulation map — plot.rrs_map","text":"","code":"gml <- system.file(\"extdata\", \"map-test.gml\", package = \"rrstools\") map <- read_rrs_map(gml)  # Plot only the map plot(map)  # Plot the map with a scenario xml <- system.file(\"extdata\", \"scenario-test.xml\", package = \"rrstools\") scenario <- read_rrs_scenario(xml) plot(map, scenario)"},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a RRS scenario object (Not supported directly) — plot.rrs_scenario","title":"Plot a RRS scenario object (Not supported directly) — plot.rrs_scenario","text":"rrs_scenario object plotted lacks necessary spatial conext provided map. function exists intercept calls plot(scenario) provide helpful error message.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a RRS scenario object (Not supported directly) — plot.rrs_scenario","text":"","code":"# Collect usage: # plot(map, scenario)"},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a RRS scenario object (Not supported directly) — plot.rrs_scenario","text":"x object class rrs_scenario. ... used.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/plot.rrs_scenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a RRS scenario object (Not supported directly) — plot.rrs_scenario","text":"visualize scenario, must plot together rrs_map object.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a RoboCupRescue Simulation map object — print.rrs_map","title":"Print a RoboCupRescue Simulation map object — print.rrs_map","text":"print prints concise summary rrs_map object. displays object type, number nodes, edges, faces contains, overall bounding box.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a RoboCupRescue Simulation map object — print.rrs_map","text":"","code":"# S3 method for class 'rrs_map' print(x, ...)"},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a RoboCupRescue Simulation map object — print.rrs_map","text":"x object class rrs_map. ... used.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a RoboCupRescue Simulation map object — print.rrs_map","text":"","code":"gml <- system.file(\"extdata\", \"map-test.gml\", package = \"rrstools\") map <- read_rrs_map(gml) map #> RoboCupRescue Simulation map object #> Number of elements: nodes: 315 edges: 413 faces: 95 #> Bounding box: xmin: -30.000000 ymin: -20.000000 xmax: 135.000000 ymax: 121.000000"},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a RRS scenario object — print.rrs_scenario","title":"Print a RRS scenario object — print.rrs_scenario","text":"print prints concise summary rrs_scenario object. displays object type, total number entities, table counts entities type.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a RRS scenario object — print.rrs_scenario","text":"","code":"# S3 method for class 'rrs_scenario' print(x, ...)"},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a RRS scenario object — print.rrs_scenario","text":"x object class rrs_scenario. ... used.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/print.rrs_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a RRS scenario object — print.rrs_scenario","text":"","code":"xml <- system.file(\"extdata\", \"scenario-test.xml\", package = \"rrstools\") scenario <- read_rrs_scenario(xml) scenario #> RoboCupRescue Simulation scenario object #> Number of entities: 35 #> Entities by type: #>             Type Count #>  ambulancecentre     1 #>    ambulanceteam     4 #>         civilian    20 #>      firebrigade     6 #>      firestation     1 #>      policeforce     1 #>           refuge     2"},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Read RoboCupRescue Simulation map data from GML file — read_rrs_map","title":"Read RoboCupRescue Simulation map data from GML file — read_rrs_map","text":"function reads processes map data RoboCupRescue Simulation GML file. extracts nodes, edges, buildings roads.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read RoboCupRescue Simulation map data from GML file — read_rrs_map","text":"","code":"read_rrs_map(gml, scale_data = FALSE)"},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read RoboCupRescue Simulation map data from GML file — read_rrs_map","text":"gml Path GML file. scale_data Logical. TRUE, coordinates scaled factor 1000 match simulation environment, adjusted minimum x y values 0. (Default: TRUE)","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read RoboCupRescue Simulation map data from GML file — read_rrs_map","text":"list sf objects: nodes, edges, buildings, roads.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read RoboCupRescue Simulation map data from GML file — read_rrs_map","text":"","code":"gml <- system.file(\"extdata\", \"map-test.gml\", package = \"rrstools\") map <- read_rrs_map(gml) map #> RoboCupRescue Simulation map object #> Number of elements: nodes: 315 edges: 413 faces: 95 #> Bounding box: xmin: -30.000000 ymin: -20.000000 xmax: 135.000000 ymax: 121.000000"},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_scenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Read RoboCupRescue Simulation scenario data from XML file — read_rrs_scenario","title":"Read RoboCupRescue Simulation scenario data from XML file — read_rrs_scenario","text":"read_rrs_scenario() reads processes scenario data RoboCupRescue Simulation XML file.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_scenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read RoboCupRescue Simulation scenario data from XML file — read_rrs_scenario","text":"","code":"read_rrs_scenario(xml)"},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_scenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read RoboCupRescue Simulation scenario data from XML file — read_rrs_scenario","text":"xml Path XML file containing scenario data.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_scenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read RoboCupRescue Simulation scenario data from XML file — read_rrs_scenario","text":"rrs_scenario object. object data.frame, contains following columns: type: Character. type entity (e.g., \"refuge\", \"civilian\"). location: Character. entity ID location entity placed. attributes: List. list containing attributes entity.","code":""},{"path":"https://nononoexe.github.io/rrstools/reference/read_rrs_scenario.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read RoboCupRescue Simulation scenario data from XML file — read_rrs_scenario","text":"","code":"xml <- system.file(\"extdata\", \"scenario-test.xml\", package = \"rrstools\") scenario <- read_rrs_scenario(xml) scenario #> RoboCupRescue Simulation scenario object #> Number of entities: 35 #> Entities by type: #>             Type Count #>  ambulancecentre     1 #>    ambulanceteam     4 #>         civilian    20 #>      firebrigade     6 #>      firestation     1 #>      policeforce     1 #>           refuge     2"},{"path":"https://nononoexe.github.io/rrstools/reference/rrstools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rrstools: Tools for Analyzing RoboCupRescue Simulation Data — rrstools-package","title":"rrstools: Tools for Analyzing RoboCupRescue Simulation Data — rrstools-package","text":"Provides functions analyzing RoboCupRescue Simulation data.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/rrstools/reference/rrstools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rrstools: Tools for Analyzing RoboCupRescue Simulation Data — rrstools-package","text":"Maintainer: Keisuke ANDO ando@maslab.aitech.ac.jp (ORCID)","code":""}]
